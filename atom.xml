<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>{ Alan Maldonado }</title>
  <subtitle>dotNet, nodeJs, react, python developer</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.alanmaldonado.pro/"/>
  <updated>2017-03-20T06:44:46.000Z</updated>
  <id>http://www.alanmaldonado.pro/</id>
  
  <author>
    <name>alan</name>
    <email>alan.maldonado@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Backbone</title>
    <link href="http://www.alanmaldonado.pro/2017/03/backbone/"/>
    <id>http://www.alanmaldonado.pro/2017/03/backbone/</id>
    <published>2017-03-20T00:42:00.000Z</published>
    <updated>2017-03-20T06:44:46.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>“Backbone JS”</p>
</blockquote>
<p>Backbone.js gives structure to web applications by providing models with key-value binding and custom events, collections with a rich API of enumerable functions, views with declarative event handling, and connects it all to your existing API over a RESTful JSON interface.</p>
<h1 id="Backbone"><a href="#Backbone" class="headerlink" title="Backbone"></a>Backbone</h1><p><img src="/img/pasted-backbone.png" alt="Image of Backbone"></p>
<h2 id="Models"><a href="#Models" class="headerlink" title="Models"></a>Models</h2><h3 id="Creating-Models"><a href="#Creating-Models" class="headerlink" title="Creating Models"></a>Creating Models</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> Song = Backbone.Model.extend(&#123;</div><div class="line">  <span class="attr">idAttribute</span>: <span class="string">'songId'</span>,</div><div class="line">  <span class="attr">urlRoot</span>: <span class="string">'/api/songs'</span>,</div><div class="line">  <span class="attr">defaults</span>: &#123;</div><div class="line">    <span class="attr">downloads</span>: <span class="number">0</span></div><div class="line">  &#125;,</div><div class="line"></div><div class="line">  <span class="attr">validate</span>: <span class="function"><span class="keyword">function</span>(<span class="params">attrs</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span> (!attrs.title)</div><div class="line">      <span class="keyword">return</span> <span class="string">'Title is required.'</span>;</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="keyword">var</span> song = <span class="keyword">new</span> Song(&#123; <span class="attr">songId</span>: <span class="number">1</span>, <span class="attr">title</span>: <span class="string">'Blue in Green'</span> &#125;);</div></pre></td></tr></table></figure>
<h3 id="Working-with-Attributes"><a href="#Working-with-Attributes" class="headerlink" title="Working with Attributes"></a>Working with Attributes</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">song.set(<span class="string">'genre'</span>, <span class="string">'Jazz'</span>);</div><div class="line"><span class="keyword">var</span> genre = song.get(<span class="string">'genre'</span>);</div><div class="line">song.unset(<span class="string">'genre'</span>);</div><div class="line"><span class="keyword">var</span> hasGenre = song.has(<span class="string">'genre'</span>);</div><div class="line">song.clear();</div></pre></td></tr></table></figure>
<h3 id="Validation"><a href="#Validation" class="headerlink" title="Validation"></a>Validation</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> isValid = song.isValid();</div><div class="line"><span class="keyword">var</span> lastError = song.validationError;</div></pre></td></tr></table></figure>
<h3 id="Syncing-with-the-Server"><a href="#Syncing-with-the-Server" class="headerlink" title="Syncing with the Server"></a>Syncing with the Server</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">song.fetch(&#123;</div><div class="line">  <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;…&#125;</div><div class="line">  error: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;…&#125;</div><div class="line">&#125;);</div><div class="line">song.save(&#123;&#125;, &#123;</div><div class="line">  <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;…&#125;</div><div class="line">  error: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;…&#125;</div><div class="line">&#125;);</div><div class="line">song.destroy(&#123;</div><div class="line">  <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;…&#125;</div><div class="line">  error: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;…&#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h2 id="Collections"><a href="#Collections" class="headerlink" title="Collections"></a>Collections</h2><h3 id="Creating-Collections"><a href="#Creating-Collections" class="headerlink" title="Creating Collections"></a>Creating Collections</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> Songs = Backbone.Collection.extend(&#123;</div><div class="line">  <span class="attr">model</span>: Song,</div><div class="line">  <span class="attr">url</span>: <span class="string">'/api/songs'</span></div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="keyword">var</span> songs = <span class="keyword">new</span> Songs([</div><div class="line">  <span class="keyword">new</span> Song(&#123; <span class="attr">title</span>: <span class="string">'Song 1'</span> &#125;),</div><div class="line">  <span class="keyword">new</span> Song(&#123; <span class="attr">title</span>: <span class="string">'Song 2'</span> &#125;)</div><div class="line">]);</div></pre></td></tr></table></figure>
<h3 id="Working-with-Collections"><a href="#Working-with-Collections" class="headerlink" title="Working with Collections"></a>Working with Collections</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">songs.add(<span class="keyword">new</span> Song(&#123;…&#125;);</div><div class="line"></div><div class="line"><span class="keyword">var</span> firstSong = songs.at(<span class="number">0</span>);</div><div class="line"><span class="keyword">var</span> songWithIdC1 = songs.get(<span class="string">'c1'</span>);</div><div class="line"></div><div class="line">songs.remove(firstSong);</div><div class="line">songs.push(<span class="keyword">new</span> Song(&#123;…&#125;);</div><div class="line"></div><div class="line"><span class="keyword">var</span> lastSong = songs.pop();</div><div class="line"><span class="keyword">var</span> jazzSongs = songs.where(&#123; <span class="attr">genre</span>: <span class="string">'Jazz'</span> &#125;);</div><div class="line"><span class="keyword">var</span> firstJazzSong = songs.findWhere(&#123; <span class="attr">genre</span>: <span class="string">'Jazz'</span> &#125;);</div><div class="line"><span class="keyword">var</span> popularSongs = songs.filter(<span class="function"><span class="keyword">function</span>(<span class="params">song</span>)</span>&#123;</div><div class="line">	<span class="keyword">return</span> song.get(<span class="string">'downloads'</span>) &gt; <span class="number">10</span>;</div><div class="line">&#125;);</div><div class="line"></div><div class="line">songs.each(<span class="function"><span class="keyword">function</span>(<span class="params">song</span>)</span>&#123;…&#125;);</div></pre></td></tr></table></figure>
<h2 id="Views"><a href="#Views" class="headerlink" title="Views"></a>Views</h2><h3 id="Creating-Views"><a href="#Creating-Views" class="headerlink" title="Creating Views"></a>Creating Views</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> SongView = Backbone.View.extend(&#123;</div><div class="line">  <span class="attr">tagName</span>: <span class="string">'span'</span>,</div><div class="line">  <span class="attr">className</span>: <span class="string">'song'</span>,</div><div class="line">  <span class="attr">id</span>: <span class="string">'1234'</span>,</div><div class="line">  <span class="attr">attributes</span>: &#123;</div><div class="line">    <span class="string">'data-genre'</span>: <span class="string">'Jazz'</span></div><div class="line">  &#125;,</div><div class="line"></div><div class="line">  <span class="attr">render</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">this</span>.$el.html(…);</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">  &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="keyword">var</span> songView = <span class="keyword">new</span> SongView();</div><div class="line">$(<span class="string">'#container'</span>).html(songView.render().$el);</div></pre></td></tr></table></figure>
<h3 id="Passing-Data-to-Views"><a href="#Passing-Data-to-Views" class="headerlink" title="Passing Data to Views"></a>Passing Data to Views</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> song = <span class="keyword">new</span> Song(&#123;…&#125;);</div><div class="line"><span class="keyword">var</span> songView = <span class="keyword">new</span> SongView(&#123; <span class="attr">model</span>: song &#125;);</div><div class="line"></div><div class="line"><span class="keyword">var</span> SongView = Backbone.View.extend(&#123;</div><div class="line">  <span class="attr">render</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">this</span>.$el.html(<span class="keyword">this</span>.model.get(<span class="string">'title'</span>));</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">  &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Handling-DOM-Events"><a href="#Handling-DOM-Events" class="headerlink" title="Handling DOM Events"></a>Handling DOM Events</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> SongView = Backbone.View.extend(&#123;</div><div class="line">  <span class="attr">events</span>: &#123;</div><div class="line">    <span class="string">'click .bookmark'</span>: <span class="string">'onClickBookmark'</span></div><div class="line">  &#125;,</div><div class="line"></div><div class="line">  <span class="attr">onClickBookmark</span>: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> $targetElement = $(e.target);</div><div class="line">    <span class="comment">//…</span></div><div class="line">  &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Handling-Model-events"><a href="#Handling-Model-events" class="headerlink" title="Handling Model events"></a>Handling Model events</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> SongView = Backbone.View.extend(&#123;</div><div class="line">  <span class="attr">initialize</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.model.on(<span class="string">'change'</span>, <span class="keyword">this</span>.render, <span class="keyword">this</span>);</div><div class="line">  &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Handling-Collection-Events"><a href="#Handling-Collection-Events" class="headerlink" title="Handling Collection Events"></a>Handling Collection Events</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> SongView = Backbone.View.extend(&#123;</div><div class="line">  <span class="attr">initialize</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.model.on(<span class="string">'add'</span>, <span class="keyword">this</span>.add, <span class="keyword">this</span>);</div><div class="line">  &#125;</div><div class="line">  add: <span class="function"><span class="keyword">function</span>(<span class="params">model</span>) </span>&#123;</div><div class="line">    <span class="comment">//…</span></div><div class="line">  &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Templating"><a href="#Templating" class="headerlink" title="Templating"></a>Templating</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> SongView = Backbone.View.extend(&#123;</div><div class="line">  <span class="attr">render</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> source = $(<span class="string">'#songTemplate'</span>).html();</div><div class="line">    <span class="keyword">var</span> template = _.template(source);</div><div class="line">    <span class="keyword">this</span>.$el.html(template(<span class="keyword">this</span>.model.toJSON());</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">  &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">“text/html”</span> <span class="attr">id</span>=<span class="string">“songTemplate”</span>&gt;</span><span class="xml"></span></div><div class="line">  <span class="tag">&lt;<span class="name">%=</span> <span class="attr">title</span> %&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">downloads</span> &gt;</span> 1000) &#123; %&gt;</div><div class="line">    Popular</div><div class="line">  <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="Events"><a href="#Events" class="headerlink" title="Events"></a>Events</h2><h3 id="Binding-and-Triggering-Custom-Events"><a href="#Binding-and-Triggering-Custom-Events" class="headerlink" title="Binding and Triggering Custom Events"></a>Binding and Triggering Custom Events</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> person = &#123;</div><div class="line">  <span class="attr">walk</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.trigger(<span class="string">'walking'</span>, &#123; <span class="attr">speed</span>: <span class="number">10</span> &#125;);</div><div class="line">  &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">_.extend(person, Backbone.Events);</div><div class="line"></div><div class="line">person.on(<span class="string">'walking'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(e.speed);</div><div class="line">&#125;);</div><div class="line"></div><div class="line">person.off(<span class="string">'walking'</span>);</div></pre></td></tr></table></figure>
<h2 id="Routers"><a href="#Routers" class="headerlink" title="Routers"></a>Routers</h2><h3 id="Creating-Routers"><a href="#Creating-Routers" class="headerlink" title="Creating Routers"></a>Creating Routers</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> AppRouter = Backbone.Router.extend(&#123;</div><div class="line">  <span class="attr">routes</span>: &#123;</div><div class="line">    <span class="string">'albums'</span>: <span class="string">'showAlbum'</span></div><div class="line">  &#125;,</div><div class="line"></div><div class="line">  <span class="attr">showAlbum</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="comment">// Usually get a model or collection from the server,</span></div><div class="line">    <span class="comment">// pass it to the view and then render the view.</span></div><div class="line">  &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="keyword">var</span> router = <span class="keyword">new</span> AppRouter();</div><div class="line"></div><div class="line"><span class="comment">// Tell Backbone to start monitoring address changes</span></div><div class="line">Back.history.start();</div></pre></td></tr></table></figure>
<h3 id="Route-Patterns"><a href="#Route-Patterns" class="headerlink" title="Route Patterns"></a>Route Patterns</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Normal route</span></div><div class="line"><span class="comment">//</span></div><div class="line"><span class="comment">// albums</span></div><div class="line"><span class="keyword">var</span> AppRouter = Backbone.Router.extend(&#123;</div><div class="line">  <span class="attr">routes</span>: &#123;</div><div class="line">    <span class="string">'albums'</span>: <span class="string">'showAlbum'</span></div><div class="line">  &#125;,</div><div class="line">  <span class="attr">showAlbum</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Route with parameters</span></div><div class="line"><span class="comment">//</span></div><div class="line"><span class="comment">// albums/1/songs/2</span></div><div class="line"><span class="keyword">var</span> AppRouter = Backbone.Router.extend(&#123;</div><div class="line">  <span class="attr">routes</span>: &#123;</div><div class="line">    <span class="string">'albums/:albumId/songs/:songId'</span>: <span class="string">'showSong'</span></div><div class="line">  &#125;,</div><div class="line">  <span class="attr">showSong</span>: <span class="function"><span class="keyword">function</span>(<span class="params">albumId, songId</span>)</span>&#123;</div><div class="line">  &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Route with a splat</span></div><div class="line"><span class="comment">//</span></div><div class="line"><span class="comment">// download/folderA/folderB/fileC</span></div><div class="line"><span class="keyword">var</span> AppRouter = Backbone.Router.extend(&#123;</div><div class="line">  <span class="attr">routes</span>: &#123;</div><div class="line">    <span class="string">'download/*url'</span>: <span class="string">'download'</span></div><div class="line">  &#125;,</div><div class="line">  <span class="attr">download</span>: <span class="function"><span class="keyword">function</span>(<span class="params">url</span>)</span>&#123;</div><div class="line">  &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Navigation"><a href="#Navigation" class="headerlink" title="Navigation"></a>Navigation</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">router.navigate(url, &#123; <span class="attr">trigger</span>: <span class="literal">true</span> &#125;);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;“Backbone JS”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Backbone.js gives structure to web applications by providing models with key-value bindin
    
    </summary>
    
      <category term="javascript" scheme="http://www.alanmaldonado.pro/categories/javascript/"/>
    
    
      <category term="javascript" scheme="http://www.alanmaldonado.pro/tags/javascript/"/>
    
      <category term="backbone" scheme="http://www.alanmaldonado.pro/tags/backbone/"/>
    
  </entry>
  
</feed>
